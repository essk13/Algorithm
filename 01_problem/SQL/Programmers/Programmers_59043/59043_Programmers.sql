-- 풀이1: LEFT JOIN
-- INS라는 이름으로 ANIMAL_INS 테이블의 ID, NAME 컬럼 선택
SELECT INS.ANIMAL_ID, INS.NAME FROM ANIMAL_INS AS INS
-- OUTS라는 이름으로 ANIMAL_OUTS 테이블 LEFT JOIN
LEFT JOIN ANIMAL_OUTS AS OUTS
-- ID를 기준으로 OUTTER JOIN
ON INS.ANIMAL_ID = OUTS.ANIMAL_ID
-- 조건: DATETIME이 INS가 OUTS보다 느린 것
WHERE INS.DATETIME > OUTS.DATETIME
-- INS의 DATETIME을 기준으로 오름차순 정렬
ORDER BY INS.DATETIME;


-- 풀이2:
-- INS라는 이름으로 ANIMAL_INS 테이블의 ID, NAME 컬럼 선택 // OUTS라는 이름으로 ANIMAL_OUTS 테이블 선택
SELECT INS.ANIMAL_ID, INS.NAME FROM ANIMAL_INS AS INS, ANIMAL_OUTS AS OUTS
-- 조건: INS와 OUTS의 ANIMAL_ID가 같은 녀석들 중 DATETIME이 INS가 더 느린 것
WHERE INS.ANIMAL_ID = OUTS.ANIMAL_ID AND INS.DATETIME > OUTS.DATETIME
-- INS의 DATETIME을 기준으로 오름차순 정렬
ORDER BY INS.DATETIME;


-- 풀이3: JOIN / USING
-- ANIMAL_INS 테이블에서 ANIMAL_ID 컬럼 선택, INS라는 이름으로 ANIMAL_INS 테이블의 NAME 컬럼 선택
SELECT ANIMAL_ID, INS.NAME FROM ANIMAL_INS AS INS
-- OUTS라는 이름으로 ANIMAL_OUTS 테이블 JOIN
JOIN ANIMAL_OUTS AS OUTS
-- JOIN 조건: 이름이 동일한 ANIMAL_ID 컬럼
USING (ANIMAL_ID)
-- 조건: DATETIME이 INS가 OUTS보다 느린 것
WHERE INS.DATETIME > OUTS.DATETIME
-- INS의 DATETIME을 기준으로 오름차순 정렬
ORDER BY INS.DATETIME;